// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NavBar /> renders correctly 1`] = `
<NavBar
  activeTeam={null}
  isTeamSidebarOpen={false}
  onTeamClick={[Function]}
>
  <div
    className="NavBar"
  >
    <div
      className="NavBar__left"
    >
      <NavLink
        activeClassName="NavBar__item--active"
        aria-current="page"
        className="NavBar__item"
        to="/images"
      >
        <Route
          path="\\\\/images"
        >
          <Link
            aria-current={null}
            className="NavBar__item"
            replace={false}
            to="/images"
          >
            <a
              aria-current={null}
              className="NavBar__item"
              href="/images"
              onClick={[Function]}
            >
              <MdImage
                className="NavBar__item__icon"
              >
                <IconBase
                  attr={
                    Object {
                      "viewBox": "0 0 24 24",
                    }
                  }
                  className="NavBar__item__icon"
                >
                  <svg
                    className="NavBar__item__icon"
                    fill="currentColor"
                    height="1em"
                    stroke="currentColor"
                    strokeWidth="0"
                    style={
                      Object {
                        "color": undefined,
                      }
                    }
                    viewBox="0 0 24 24"
                    width="1em"
                  >
                    <path
                      d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"
                      key="0"
                    />
                  </svg>
                </IconBase>
              </MdImage>
              <span
                className="NavBar__item__text"
              >
                Gallery
              </span>
            </a>
          </Link>
        </Route>
      </NavLink>
      <Connect(PresentationSwitch)>
        <PresentationSwitch
          dispatch={[Function]}
          isPresentationModeOn={false}
        >
          <button
            className="PresentationSwitch"
            data-tip="Synchronized Presentation Mode"
            onClick={[Function]}
            type="button"
          >
            <div
              className="PresentationSwitch__outer"
            >
              <div
                className="PresentationSwitch__inner"
              />
            </div>
          </button>
          <ReactTooltip
            effect="solid"
            insecure={true}
            place="bottom"
            resizeHide={true}
            wrapper="div"
          >
            <div
              className="__react_component_tooltip place-bottom type-dark "
              data-id="tooltip"
            />
          </ReactTooltip>
        </PresentationSwitch>
      </Connect(PresentationSwitch)>
    </div>
    <div
      className="NavBar__search"
    >
      <Connect(OnClickOutside(Search))>
        <OnClickOutside(Search)
          activeTeam={null}
          dispatch={[Function]}
          eventTypes={
            Array [
              "mousedown",
              "touchstart",
            ]
          }
          excludeScrollbar={false}
          isPresentationModeOn={false}
          outsideClickIgnoreClass="ignore-react-onclickoutside"
          preventDefault={false}
          stopPropagation={false}
        >
          <Search
            activeTeam={null}
            disableOnClickOutside={[Function]}
            dispatch={[Function]}
            enableOnClickOutside={[Function]}
            eventTypes={
              Array [
                "mousedown",
                "touchstart",
              ]
            }
            isPresentationModeOn={false}
            outsideClickIgnoreClass="ignore-react-onclickoutside"
            preventDefault={false}
            stopPropagation={false}
          >
            <form
              className="Search"
              onSubmit={[Function]}
            >
              <button
                className="Search__preview"
                onClick={[Function]}
                type="button"
              >
                <MdSearch
                  className="Search__preview__icon"
                >
                  <IconBase
                    attr={
                      Object {
                        "viewBox": "0 0 24 24",
                      }
                    }
                    className="Search__preview__icon"
                  >
                    <svg
                      className="Search__preview__icon"
                      fill="currentColor"
                      height="1em"
                      stroke="currentColor"
                      strokeWidth="0"
                      style={
                        Object {
                          "color": undefined,
                        }
                      }
                      viewBox="0 0 24 24"
                      width="1em"
                    >
                      <path
                        d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                        key="0"
                      />
                    </svg>
                  </IconBase>
                </MdSearch>
                <span
                  className="Search__preview__text"
                >
                  Suchen
                </span>
              </button>
            </form>
          </Search>
        </OnClickOutside(Search)>
      </Connect(OnClickOutside(Search))>
    </div>
    <div
      className="NavBar__right"
    >
      <NavLink
        activeClassName="NavBar__item--active"
        aria-current="page"
        className="NavBar__item"
        to="/upload"
      >
        <Route
          path="\\\\/upload"
        >
          <Link
            aria-current={null}
            className="NavBar__item"
            replace={false}
            to="/upload"
          >
            <a
              aria-current={null}
              className="NavBar__item"
              href="/upload"
              onClick={[Function]}
            >
              <MdCloudUpload
                className="NavBar__item__icon"
              >
                <IconBase
                  attr={
                    Object {
                      "viewBox": "0 0 24 24",
                    }
                  }
                  className="NavBar__item__icon"
                >
                  <svg
                    className="NavBar__item__icon"
                    fill="currentColor"
                    height="1em"
                    stroke="currentColor"
                    strokeWidth="0"
                    style={
                      Object {
                        "color": undefined,
                      }
                    }
                    viewBox="0 0 24 24"
                    width="1em"
                  >
                    <path
                      d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                      key="0"
                    />
                  </svg>
                </IconBase>
              </MdCloudUpload>
              <span
                className="NavBar__item__text"
              >
                Upload
              </span>
            </a>
          </Link>
        </Route>
      </NavLink>
    </div>
  </div>
</NavBar>
`;
